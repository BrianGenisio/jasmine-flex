<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="955" minHeight="600">
	<fx:Script>
		<![CDATA[
			import org.asmine.core.TrivialConsoleReporter;
			import org.asmine.core.global.*;
			import org.asmine.core.jasmine;
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	
	<s:applicationComplete>
		
		describe("when foo is set to 5", function() {
			it("should be 5", function() {
				var foo = 5;
				expect(foo).toEqual(5);
			});
		});
		
		describe("base.js", function() {
			describe("jasmine.MessageResult", function() {
				it("#toString should pretty-print and concatenate each part of the message", function() {
					var values = ["log", "message", 123, {key: "value"}, "FTW!"];
					var messageResult = new jasmine.MessageResult(values);
					expect(messageResult.toString()).toEqual("log message 123 { key : 'value' } FTW!");
				});
			});
		
			describe("jasmine.log", function() {
				it("should accept n arguments", function() {
					spyOn(jasmine.getEnv().currentSpec, 'log');
					jasmine.log(1, 2, 3);
					expect(jasmine.getEnv().currentSpec.log).toHaveBeenCalledWith(1, 2, 3);
				});
			});
			
			describe("jasmine.getGlobal", function() {
				it("should return the global object", function() {
					var globalObject = (function() {
						return this;
					})();
			
					expect(jasmine.getGlobal()).toBe(globalObject);
				});
			});
		});
		
		jasmine.getEnv().addReporter(new TrivialConsoleReporter());
		jasmine.getEnv().execute();
		
	</s:applicationComplete>
</s:Application>
